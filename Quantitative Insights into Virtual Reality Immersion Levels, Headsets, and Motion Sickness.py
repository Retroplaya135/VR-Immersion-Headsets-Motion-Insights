# -*- coding: utf-8 -*-
"""Copy of notebook48ddcb2bb8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rlz_-13UwfSoZLoXezbLzinz2FjGEHAN
"""

# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,
# THEN FEEL FREE TO DELETE THIS CELL.
# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON
# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR
# NOTEBOOK.
import kagglehub
aakashjoshi123_virtual_reality_experiences_path = kagglehub.dataset_download('aakashjoshi123/virtual-reality-experiences')

print('Data source import complete.')

#https://www.kaggle.com/datasets/aakashjoshi123/virtual-reality-experiences

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import seaborn as sns
import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))



data=pd.read_csv('/kaggle/input/virtual-reality-experiences/data.csv')

data.head()

data.head

data.describe().T   #As suggested by Raafi's notebook

print(f'Total memory usage: {data.memory_usage().sum()/1000} KBs')

#As inspired by Raafi's notebook; plotting similar plots

import seaborn as sns

# Define the columns you want to plot
columns = ['Gender', 'VRHeadset',  'MotionSickness', 'Age', 'Duration']

def plot_relationship(x_variable):
    # Create subplots
    fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(20, 11))

    # Remove x_variable from the list of columns
    other_columns = columns.copy()

    other_columns.remove(x_variable)


    colors2 = sns.color_palette("Set2")

    # Loop through the other columns and create line plots
    for i, col in enumerate(other_columns):
        ax = axes[i // 2, i % 2]  # Get the appropriate subplot

        sns.lineplot(data=data, x=col, y=x_variable, hue='ImmersionLevel', palette=colors2, linewidth=4, ax=ax)

        ax.legend(bbox_to_anchor=(1.02, 1), loc='upper left', borderaxespad=0)

        title = f'{x_variable} x {col} vs ImmersionLevel'

        ax.set_title(title)

    # Adjust subplot layout
    plt.tight_layout()

    # Show the plots
    plt.show()

# Call the function with your desired x_variable
x_variable_to_plot = 'Gender'

plot_relationship(x_variable_to_plot)

x_variable_to_plot = 'VRHeadset'

plot_relationship(x_variable_to_plot)

x_variable_to_plot = 'MotionSickness'

plot_relationship(x_variable_to_plot)

x_variable_to_plot = 'Age'

plot_relationship(x_variable_to_plot)

x_variable_to_plot = 'Duration'

plot_relationship(x_variable_to_plot)

plt.figure(figsize=(12, 6))

# Histogram
plt.subplot(1, 2, 1)

sns.histplot(data=data, x='Age', bins=20, kde=True)

plt.title('Age Distribution')

# KDE Plot
plt.subplot(1, 2, 2)

sns.kdeplot(data=data, x='Age', fill=True)

plt.title('Kernel Density Estimation (KDE) of Age')

plt.xlabel('Age')

plt.ylabel('Density')

plt.tight_layout()

plt.show()

plt.figure(figsize=(10, 6))

sns.boxplot(data=data, x='ImmersionLevel', y='Duration', palette='Set2')

plt.title('Duration vs. Immersion Level')

plt.xlabel('Immersion Level')

plt.ylabel('Duration (minutes)')

plt.show()

plt.figure(figsize=(10, 6))

sns.scatterplot(data=data, x='Age', y='Duration', hue='Gender', palette='Set2')

plt.title('Age vs. Duration of VR Usage')

plt.xlabel('Age')

plt.ylabel('Duration (minutes)')

plt.legend(title='Gender')

plt.show()

# Assuming 'data' is your DataFrame
data['Gender'] = data['Gender'].replace({'Male': 1, 'Female': 2, 'Other' : 3})

# Create a dictionary to map known VR headset names to numeric values
vr_headset_mapping = ({'Oculus Rift': 1,'HTC Vive': 2,'PlayStation VR': 3})


# Now, you can calculate the correlation matrix
correlation_matrix = data.corr()

data=pd.read_csv('/kaggle/input/virtual-reality-experiences/data.csv')

data.head()

data['Gender'] = data['Gender'].replace({'Male': 1, 'Female': 2, 'Other': 3})

# Create a dictionary to map known VR headset names to numeric values

data['VRHeadset'] = data['VRHeadset'].replace({'Oculus Rift': 1, 'HTC Vive': 2, 'PlayStation VR': 3})

data.corr()

sns.heatmap(data.corr(), annot=True)

sns.pairplot(data=data, hue='ImmersionLevel', palette='viridis', diag_kind='kde')

plt.suptitle('Pair Plot with Density Estimates', y=1.02)

plt.show()

plt.figure(figsize=(10, 6))

sns.violinplot(data=data, x='Age', y='MotionSickness', hue='ImmersionLevel', palette='viridis')

plt.title('Motion Sickness vs. Age Group by Immersion Level')

plt.xlabel('Age Group')

plt.ylabel('Motion Sickness Group')

plt.show()

plt.figure(figsize=(10, 6))

sns.countplot(data=data, x='VRHeadset', hue='Gender', palette='viridis')

plt.title('VR Headset Usage by Gender')

plt.xlabel('VR Headset')

plt.ylabel('Count')

plt.show()

g = sns.FacetGrid(data=data, col='ImmersionLevel', height=4, aspect=1.2)

g.map(sns.histplot, 'MotionSickness', bins=10, kde=True)

g.set_axis_labels('Motion Sickness Group', 'Count')

g.set_titles('Immersion Level {col_name}')

plt.tight_layout()

plt.show()

plt.figure(figsize=(10, 6))

sns.lmplot(data=data, x='Age', y='Duration', hue='Gender', scatter_kws={'alpha': 0.5}, line_kws={'color': 'black'})

plt.title('Age vs. Duration of VR Usage by Gender')

plt.xlabel('Age')

plt.ylabel('Duration (minutes)')

plt.legend(title='Gender')

plt.show()

import sys

# Get a list of module names used in the current script
used_modules = set(sys.modules) & set(globals())

used_module_names = [module_name for module_name in used_modules if '.' not in module_name]

# Print the list of used module names
print("Modules used in the script:")

for module_name in used_module_names:
    print(module_name)

#Point of the analysis? Here are some points to consider based on the data available on VR.

print('Motion sickness decreases with increased immersion level.')

print('Solution: Enhance immersion to reduce motion sickness in VR experiences.')

print('Younger users use VR for longer durations.')

print('Solution: Design for comfort during extended use, especially for younger users.'   )

print('Males are more likely to use VR than females and other genders.'    )

print('Solution: Target a diverse audience for broader adoption.'     )

print('Oculus Rift, HTC Vive, and PlayStation VR are popular VR headsets. '    )

print('Solution: Ensure compatibility with popular VR platforms.'    )

print('Males report higher immersion levels.'    )

print('Solution: Create inclusive experiences considering gender preferences.'   )

print('Higher immersion leads to longer VR usage.' )

print('Solution: Focus on high-quality and engaging content.')

print('Younger users are more prone to motion sickness.')

print('Solution: Implement customization options to reduce motion sickness.')

print('Design a smart wearable with demographic considerations.')

print('Solution: Continuously improve comfort, performance, and user experience based on feedback.')